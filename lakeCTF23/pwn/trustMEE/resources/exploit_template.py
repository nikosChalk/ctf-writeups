from pwn import *
import hashlib
import re
import base64


def upload(r, bytes, outfile_path):
    r.sendline(f"touch {outfile_path}.b64".encode())
    b64_data = base64.b64encode(bytes)
    for i in range(0, len(b64_data), 256):
        chunk = b64_data[i:i + 256]
        r.sendline(f'echo -n {chunk.decode()} >> {outfile_path}.b64'.encode())
    r.sendline(f'base64 -d {outfile_path}.b64 > {outfile_path}')


def pow_solver(prefix, difficulty):
    zeros = '0' * difficulty
    def is_valid(digest):
        bits = ''.join(bin(i)[2:].zfill(8) for i in digest)
        return bits[:difficulty] == zeros
    i = 0
    while True:
        i += 1
        s = prefix + str(i)
        if is_valid(hashlib.sha256(s.encode()).digest()):
            return str(i)

import sys
print(sys.argv)
if len(sys.argv) < 3:
    host = "127.0.0.1"
    port = "9002"
else:
    host = sys.argv[1]
    port = int(sys.argv[2])

r = remote(host, port)

recv_data = r.recvuntil(b">").decode()
prefix = re.findall(r'\[\*\] prefix: ([0-9A-Za-z]+)\n', recv_data)[0]
difficulty = int(re.findall(r'\[\*\] difficulty: ([0-9]+)\n', recv_data)[0])
print("difficulty;", difficulty)
print("prefix:", prefix)
answer = pow_solver(prefix, difficulty)
print("answer:", answer)
r.sendline(answer.encode())
r.recvuntil(b"execution environment")
# TODO
r.interactive()
